<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.jxc.dao.CustomerDao">
    <!--  查询用户列表分页, 支持模糊搜索  -->
    <select id="selectCustomerList" resultType="com.atguigu.jxc.entity.Customer">
        SELECT customer_id customerId,
        customer_name customerName,
        contacts,
        phone_number phoneNumber,
        address,
        remarks
        FROM t_customer
        <where>
            <if test="customerName != null and customerName!= ''">
                customer_name LIKE "%"#{customerName}"%"
            </if>
        </where>
        LIMIT #{page},#{rows}
    </select>

    <!--  根据客户 id 获取客户信息 -->
    <select id="selectCustomerById" resultType="com.atguigu.jxc.entity.Customer">
        SELECT customer_id   customerId,
               customer_name customerName,
               contacts,
               phone_number  phoneNumber,
               address,
               remarks
        FROM t_customer
        WHERE customer_id = #{customerId}
    </select>

    <!--  新增客户信息 -->
    <insert id="insertCustomer" parameterType="com.atguigu.jxc.entity.Customer" useGeneratedKeys="true" keyProperty="customerId">
        INSERT INTO t_customer (customer_name, contacts, phone_number, address, remarks)
        VALUES (#{customerName}, #{contacts}, #{phoneNumber}, #{address}, #{remarks})
    </insert>

    <!--  修改客户信息 -->
    <update id="updateCustomer" parameterType="com.atguigu.jxc.entity.Customer">
        UPDATE t_customer
        SET customer_name = #{customerName},
            contacts      = #{contacts},
            phone_number  = #{phoneNumber},
            address       = #{address},
            remarks       = #{remarks}
        WHERE customer_id = #{customerId}
    </update>

    <!--  删除客户信息 -->
    <delete id="deleteCustomer">
        DELETE
        FROM t_customer
        WHERE customer_id IN
        <foreach collection="ids" item="id" separator="," close=")" open="(">
            #{id}
        </foreach>
    </delete>
</mapper>